/* tslint:disable */
/* eslint-disable */
/**
 * Sample API
 * A sample API to illustrate OpenAPI concepts
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';

/**
 * 
 * @export
 * @interface LoginRequest
 */
export interface LoginRequest {
    /**
     * 
     * @type {string}
     * @memberof LoginRequest
     */
    'client_id': string;
    /**
     * 
     * @type {string}
     * @memberof LoginRequest
     */
    'password': string;
    /**
     * 
     * @type {string}
     * @memberof LoginRequest
     */
    'username': string;
}
/**
 * 
 * @export
 * @interface LoginResponse
 */
export interface LoginResponse {
    /**
     * 
     * @type {string}
     * @memberof LoginResponse
     */
    'token'?: string;
}
/**
 * 
 * @export
 * @interface Schedule
 */
export interface Schedule {
    /**
     * 
     * @type {ScheduleAvailability}
     * @memberof Schedule
     */
    'availability'?: ScheduleAvailability;
    /**
     * 
     * @type {string}
     * @memberof Schedule
     */
    'cancellation_policy'?: string;
    /**
     * 
     * @type {ScheduleClass}
     * @memberof Schedule
     */
    'class'?: ScheduleClass;
    /**
     * 
     * @type {number}
     * @memberof Schedule
     */
    'duration_minutes'?: number;
    /**
     * 
     * @type {number}
     * @memberof Schedule
     */
    'endtime'?: number;
    /**
     * 
     * @type {number}
     * @memberof Schedule
     */
    'id'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Schedule
     */
    'is_livestream'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Schedule
     */
    'late_cancellation'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Schedule
     */
    'location_override'?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Schedule
     */
    'org_visits_including_plus'?: number;
    /**
     * 
     * @type {number}
     * @memberof Schedule
     */
    'retail_price_in_credits'?: number;
    /**
     * 
     * @type {string}
     * @memberof Schedule
     */
    'source'?: string;
    /**
     * 
     * @type {number}
     * @memberof Schedule
     */
    'starttime'?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof Schedule
     */
    'tag_ids'?: Array<string>;
    /**
     * 
     * @type {ScheduleTeacher}
     * @memberof Schedule
     */
    'teacher'?: ScheduleTeacher;
    /**
     * 
     * @type {string}
     * @memberof Schedule
     */
    'teacher_name'?: string;
    /**
     * 
     * @type {ScheduleVenue}
     * @memberof Schedule
     */
    'venue'?: ScheduleVenue;
    /**
     * 
     * @type {Array<string>}
     * @memberof Schedule
     */
    'verticals'?: Array<string>;
}
/**
 * 
 * @export
 * @interface ScheduleAvailability
 */
export interface ScheduleAvailability {
    /**
     * 
     * @type {string}
     * @memberof ScheduleAvailability
     */
    'credits_type'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleAvailability
     */
    'label'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleAvailability
     */
    'preferred_booking_method'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleAvailability
     */
    'pricing_algo_details'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleAvailability
     */
    'reason'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleAvailability
     */
    'status'?: string;
}
/**
 * 
 * @export
 * @interface ScheduleClass
 */
export interface ScheduleClass {
    /**
     * 
     * @type {string}
     * @memberof ScheduleClass
     */
    'activities'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleClass
     */
    'alias'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleClass
     */
    'description'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleClass
     */
    'entity_type'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleClass
     */
    'how_to_get_there'?: string;
    /**
     * 
     * @type {number}
     * @memberof ScheduleClass
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof ScheduleClass
     */
    'level'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleClass
     */
    'name'?: string;
    /**
     * 
     * @type {ScheduleClassRatings}
     * @memberof ScheduleClass
     */
    'ratings'?: ScheduleClassRatings;
    /**
     * 
     * @type {string}
     * @memberof ScheduleClass
     */
    'source'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleClass
     */
    'vaccine_only'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ScheduleClass
     */
    'what_to_bring'?: string;
}
/**
 * 
 * @export
 * @interface ScheduleClassRatings
 */
export interface ScheduleClassRatings {
    /**
     * 
     * @type {ScheduleClassRatingsCount}
     * @memberof ScheduleClassRatings
     */
    'count'?: ScheduleClassRatingsCount;
    /**
     * 
     * @type {string}
     * @memberof ScheduleClassRatings
     */
    'display_total'?: string;
    /**
     * 
     * @type {number}
     * @memberof ScheduleClassRatings
     */
    'mean'?: number;
}
/**
 * 
 * @export
 * @interface ScheduleClassRatingsCount
 */
export interface ScheduleClassRatingsCount {
    /**
     * 
     * @type {number}
     * @memberof ScheduleClassRatingsCount
     */
    '2_star'?: number;
    /**
     * 
     * @type {number}
     * @memberof ScheduleClassRatingsCount
     */
    '3_star'?: number;
    /**
     * 
     * @type {number}
     * @memberof ScheduleClassRatingsCount
     */
    '4_star'?: number;
    /**
     * 
     * @type {number}
     * @memberof ScheduleClassRatingsCount
     */
    '5_star'?: number;
    /**
     * 
     * @type {number}
     * @memberof ScheduleClassRatingsCount
     */
    'total'?: number;
    /**
     * 
     * @type {number}
     * @memberof ScheduleClassRatingsCount
     */
    '1_star'?: number;
}
/**
 * 
 * @export
 * @interface ScheduleTeacher
 */
export interface ScheduleTeacher {
    /**
     * 
     * @type {number}
     * @memberof ScheduleTeacher
     */
    'id'?: number;
    /**
     * 
     * @type {string}
     * @memberof ScheduleTeacher
     */
    'name'?: string;
}
/**
 * 
 * @export
 * @interface ScheduleVenue
 */
export interface ScheduleVenue {
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'activities'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'activity_id_set'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'activity_ids'?: string;
    /**
     * 
     * @type {ScheduleVenueAddress}
     * @memberof ScheduleVenue
     */
    'address'?: ScheduleVenueAddress;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'alias'?: string;
    /**
     * 
     * @type {ScheduleVenueAmenities}
     * @memberof ScheduleVenue
     */
    'amenities'?: ScheduleVenueAmenities;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenue
     */
    'attended'?: boolean;
    /**
     * 
     * @type {ScheduleVenueAttributes}
     * @memberof ScheduleVenue
     */
    'attributes'?: ScheduleVenueAttributes;
    /**
     * 
     * @type {number}
     * @memberof ScheduleVenue
     */
    'average_discount'?: number;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'booking_window'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'bookmark_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'cancellation_policy'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'description'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'distance'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'distance_unit'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'facebook_page_url'?: string;
    /**
     * 
     * @type {ScheduleVenueGoodnessScore}
     * @memberof ScheduleVenue
     */
    'goodness_score'?: ScheduleVenueGoodnessScore;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenue
     */
    'hide_in_search'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'how_to_get_there'?: string;
    /**
     * 
     * @type {number}
     * @memberof ScheduleVenue
     */
    'id'?: number;
    /**
     * 
     * @type {ScheduleVenueImages}
     * @memberof ScheduleVenue
     */
    'images'?: ScheduleVenueImages;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'instagram_handle'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenue
     */
    'is_new'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'late_cancellation'?: string;
    /**
     * 
     * @type {ScheduleVenueLocation}
     * @memberof ScheduleVenue
     */
    'location'?: ScheduleVenueLocation;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenue
     */
    'lockers'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'name'?: string;
    /**
     * 
     * @type {number}
     * @memberof ScheduleVenue
     */
    'organization_id'?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenue
     */
    'out_of_network'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'phone_number'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenue
     */
    'pre_built'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenue
     */
    'pre_built_page_live'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'pro_tip'?: string;
    /**
     * 
     * @type {ScheduleClassRatings}
     * @memberof ScheduleVenue
     */
    'ratings'?: ScheduleClassRatings;
    /**
     * 
     * @type {ScheduleVenueRequirements}
     * @memberof ScheduleVenue
     */
    'requirements'?: ScheduleVenueRequirements;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'return_in_results'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenue
     */
    'showers'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'source'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'spotify_url'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'studio_direct_enabled'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'subtitle'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'transportation'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'twitter'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'tz'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'updated_on'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'venue_store_ad_unit'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'website'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'what_to_bring'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenue
     */
    'when_to_arrive'?: string;
}
/**
 * 
 * @export
 * @interface ScheduleVenueAddress
 */
export interface ScheduleVenueAddress {
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueAddress
     */
    'address_line0'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueAddress
     */
    'address_line1'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueAddress
     */
    'address_line2'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueAddress
     */
    'city'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueAddress
     */
    'state'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueAddress
     */
    'zip_code'?: string;
}
/**
 * 
 * @export
 * @interface ScheduleVenueAmenities
 */
export interface ScheduleVenueAmenities {
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenueAmenities
     */
    'showers'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenueAmenities
     */
    'lockers'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenueAmenities
     */
    'mats'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenueAmenities
     */
    'towels'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenueAmenities
     */
    'parking'?: boolean;
}
/**
 * 
 * @export
 * @interface ScheduleVenueAttributes
 */
export interface ScheduleVenueAttributes {
    /**
     * 
     * @type {ScheduleVenueAttributesSafetyAndCleanliness}
     * @memberof ScheduleVenueAttributes
     */
    'safety_and_cleanliness'?: ScheduleVenueAttributesSafetyAndCleanliness;
}
/**
 * 
 * @export
 * @interface ScheduleVenueAttributesSafetyAndCleanliness
 */
export interface ScheduleVenueAttributesSafetyAndCleanliness {
    /**
     * 
     * @type {Array<ScheduleVenueAttributesSafetyAndCleanlinessItems>}
     * @memberof ScheduleVenueAttributesSafetyAndCleanliness
     */
    'items'?: Array<ScheduleVenueAttributesSafetyAndCleanlinessItems>;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueAttributesSafetyAndCleanliness
     */
    'last_updated'?: string;
}
/**
 * 
 * @export
 * @interface ScheduleVenueAttributesSafetyAndCleanlinessItems
 */
export interface ScheduleVenueAttributesSafetyAndCleanlinessItems {
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueAttributesSafetyAndCleanlinessItems
     */
    'attribute_name'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueAttributesSafetyAndCleanlinessItems
     */
    'description'?: string;
}
/**
 * 
 * @export
 * @interface ScheduleVenueGoodnessScore
 */
export interface ScheduleVenueGoodnessScore {
    /**
     * 
     * @type {number}
     * @memberof ScheduleVenueGoodnessScore
     */
    'venue_search'?: number;
}
/**
 * 
 * @export
 * @interface ScheduleVenueImages
 */
export interface ScheduleVenueImages {
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueImages
     */
    'default'?: string;
    /**
     * 
     * @type {ScheduleVenueImagesMobile}
     * @memberof ScheduleVenueImages
     */
    'mobile'?: ScheduleVenueImagesMobile;
}
/**
 * 
 * @export
 * @interface ScheduleVenueImagesMobile
 */
export interface ScheduleVenueImagesMobile {
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueImagesMobile
     */
    '1x'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueImagesMobile
     */
    '2x'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueImagesMobile
     */
    '3x'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueImagesMobile
     */
    'v1x'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueImagesMobile
     */
    'v2x'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueImagesMobile
     */
    'v3x'?: string;
}
/**
 * 
 * @export
 * @interface ScheduleVenueLocation
 */
export interface ScheduleVenueLocation {
    /**
     * 
     * @type {number}
     * @memberof ScheduleVenueLocation
     */
    'lat'?: number;
    /**
     * 
     * @type {number}
     * @memberof ScheduleVenueLocation
     */
    'location_id'?: number;
    /**
     * 
     * @type {number}
     * @memberof ScheduleVenueLocation
     */
    'lon'?: number;
    /**
     * 
     * @type {number}
     * @memberof ScheduleVenueLocation
     */
    'msa_id'?: number;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueLocation
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueLocation
     */
    'neighborhood'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueLocation
     */
    'parent_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof ScheduleVenueLocation
     */
    'parent_name'?: string;
}
/**
 * 
 * @export
 * @interface ScheduleVenueRequirements
 */
export interface ScheduleVenueRequirements {
    /**
     * 
     * @type {ScheduleVenueRequirementsUser}
     * @memberof ScheduleVenueRequirements
     */
    'user'?: ScheduleVenueRequirementsUser;
}
/**
 * 
 * @export
 * @interface ScheduleVenueRequirementsUser
 */
export interface ScheduleVenueRequirementsUser {
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenueRequirementsUser
     */
    'address'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenueRequirementsUser
     */
    'date_of_birth'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenueRequirementsUser
     */
    'emergency_contact'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleVenueRequirementsUser
     */
    'phone'?: boolean;
}
/**
 * 
 * @export
 * @interface SearchRequest
 */
export interface SearchRequest {
    /**
     * 
     * @type {string}
     * @memberof SearchRequest
     */
    'date'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SearchRequest
     */
    'report_ineligible_classes'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SearchRequest
     */
    'exclude_past_booking'?: boolean;
    /**
     * 
     * @type {Array<number>}
     * @memberof SearchRequest
     */
    'venue'?: Array<number>;
}
/**
 * 
 * @export
 * @interface SearchResponse
 */
export interface SearchResponse {
    /**
     * 
     * @type {SearchResponseFilterOptions}
     * @memberof SearchResponse
     */
    'filter_options'?: SearchResponseFilterOptions;
    /**
     * 
     * @type {SearchResponseScheduleContext}
     * @memberof SearchResponse
     */
    'schedule_context'?: SearchResponseScheduleContext;
    /**
     * 
     * @type {Array<Schedule>}
     * @memberof SearchResponse
     */
    'schedules'?: Array<Schedule>;
    /**
     * 
     * @type {string}
     * @memberof SearchResponse
     */
    'search_id'?: string;
}
/**
 * 
 * @export
 * @interface SearchResponseFilterOptions
 */
export interface SearchResponseFilterOptions {
    /**
     * 
     * @type {SearchResponseFilterOptionsCreditValues}
     * @memberof SearchResponseFilterOptions
     */
    'credit_values'?: SearchResponseFilterOptionsCreditValues;
}
/**
 * 
 * @export
 * @interface SearchResponseFilterOptionsCreditValues
 */
export interface SearchResponseFilterOptionsCreditValues {
    /**
     * 
     * @type {number}
     * @memberof SearchResponseFilterOptionsCreditValues
     */
    'max'?: number;
    /**
     * 
     * @type {number}
     * @memberof SearchResponseFilterOptionsCreditValues
     */
    'min'?: number;
}
/**
 * 
 * @export
 * @interface SearchResponseScheduleContext
 */
export interface SearchResponseScheduleContext {
    /**
     * 
     * @type {boolean}
     * @memberof SearchResponseScheduleContext
     */
    'is_using_api'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SearchResponseScheduleContext
     */
    'is_viewing_next_cycle'?: boolean;
}

/**
 * DefaultApi - axios parameter creator
 * @export
 */
export const DefaultApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @summary Retrieve an authentication token
         * @param {LoginRequest} loginRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiV2AuthLoginPost: async (loginRequest: LoginRequest, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'loginRequest' is not null or undefined
            assertParamExists('apiV2AuthLoginPost', 'loginRequest', loginRequest)
            const localVarPath = `/_api/v2/auth/login`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(loginRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Search for classes within the filters provided
         * @param {SearchRequest} searchRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiV3SearchSchedulesPost: async (searchRequest: SearchRequest, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'searchRequest' is not null or undefined
            assertParamExists('apiV3SearchSchedulesPost', 'searchRequest', searchRequest)
            const localVarPath = `/_api/v3/search/schedules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(searchRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DefaultApi - functional programming interface
 * @export
 */
export const DefaultApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = DefaultApiAxiosParamCreator(configuration)
    return {
        /**
         * 
         * @summary Retrieve an authentication token
         * @param {LoginRequest} loginRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async apiV2AuthLoginPost(loginRequest: LoginRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LoginResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.apiV2AuthLoginPost(loginRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @summary Search for classes within the filters provided
         * @param {SearchRequest} searchRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async apiV3SearchSchedulesPost(searchRequest: SearchRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SearchResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.apiV3SearchSchedulesPost(searchRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * DefaultApi - factory interface
 * @export
 */
export const DefaultApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = DefaultApiFp(configuration)
    return {
        /**
         * 
         * @summary Retrieve an authentication token
         * @param {LoginRequest} loginRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiV2AuthLoginPost(loginRequest: LoginRequest, options?: any): AxiosPromise<LoginResponse> {
            return localVarFp.apiV2AuthLoginPost(loginRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Search for classes within the filters provided
         * @param {SearchRequest} searchRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiV3SearchSchedulesPost(searchRequest: SearchRequest, options?: any): AxiosPromise<SearchResponse> {
            return localVarFp.apiV3SearchSchedulesPost(searchRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export class DefaultApi extends BaseAPI {
    /**
     * 
     * @summary Retrieve an authentication token
     * @param {LoginRequest} loginRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public apiV2AuthLoginPost(loginRequest: LoginRequest, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).apiV2AuthLoginPost(loginRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Search for classes within the filters provided
     * @param {SearchRequest} searchRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public apiV3SearchSchedulesPost(searchRequest: SearchRequest, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).apiV3SearchSchedulesPost(searchRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


